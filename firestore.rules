
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read and write to their own user document
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Children can read quizzes assigned by their parent.
    // Parents can create, read, update, delete their own quizzes.
    match /quizzes/{quizId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        resource.data.userId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.parentId
      );
      allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Users can read preloaded quizzes
    match /preloadedQuizzes/{quizId} {
      allow read: if request.auth != null;
      // Prevent write access for all users
      allow write: if false;
    }

    // Users can write their own quiz attempts.
    // Parents can read their children's attempts.
    match /quizAttempts/{attemptId} {
       allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
       allow read: if request.auth != null && (
         resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(resource.data.userId)).data.parentId == request.auth.uid
       );
    }
    
    // Achievements can be read by the user who owns them.
    // Achievements are written by server-side logic, not clients.
    match /userAchievements/{achievementId} {
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
        allow write: if false; // Only server-side logic can unlock achievements
    }
  }
}
