rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isParent() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isMyChild(childId) {
        return get(/databases/$(database)/documents/users/$(childId)).data.parentId == request.auth.uid;
    }

    match /users/{userId} {
      // Allow a user to read their own document.
      allow read, update: if request.auth.uid == userId;
      
      // Allow a user to create their own document.
      allow create: if isSignedIn();

      // **FIX:** Allow any signed-in user to query the 'users' collection.
      // This is required for the initial admin check during profile creation.
      allow list: if isSignedIn();
    }

    match /quizzes/{quizId} {
      // Parents can create quizzes.
      allow create: if isParent();
      // Anyone authenticated can read quizzes.
      allow read: if isSignedIn();
    }
    
    match /preloadedQuizzes/{quizId} {
        // Allow authenticated users to read pre-loaded quizzes
        allow read: if isSignedIn();
        // Allow admins to write (for seeding)
        allow write: if isParent();
    }

    match /quizAttempts/{attemptId} {
        // Children can create their own attempts
        allow create: if request.resource.data.userId == request.auth.uid;
        // Children can read their own attempts
        // Parents can read their childrens' attempts
        allow read: if request.resource.data.userId == request.auth.uid || isMyChild(request.resource.data.userId);
    }
    
    match /userAchievements/{achievementId} {
        // User can create their own achievement entries
        allow create: if request.resource.data.userId == request.auth.uid;
        // User can read their own achievements
        allow read: if request.resource.data.userId == request.auth.uid;
    }
  }
}
